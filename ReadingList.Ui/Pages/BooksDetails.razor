@page "/books/details/{id:long}"

<h4 class="bg-info text-center text-white p-2">Book Details</h4>

<div class="form-group">
    <label>ID</label>
    <input class="form-control" value="@BookData.Id" disabled />
</div>
<div class="form-group">
    <label>Name</label>
    <input class="form-control" value="@BookData.Name" disabled />
</div>
<div class="form-group">
    <label>ISBN/ASIN</label>
    <input class="form-control" value="@BookData.ISBN" disabled />
</div>
<div class="form-group">
    <label>Author</label>
    <input class="form-control" value="@BookData.Author" disabled />
</div>
<div class="form-group">
    <label>Cover Image</label><br/>
    <img src="@BookData.ImageUrl" />
</div>
<div class="form-group">
    <label>Image URL</label>
    <input class="form-control" value="@BookData.ImageUrl" disabled />
</div>
<div class="form-group">
    <label>Tags</label>
    <input class="form-control" value="@BookData.Tags" disabled />
</div>
<div class="form-group">
    <label>Sequence</label>
    <input class="form-control" value="@BookData.Sequence" disabled />
</div>
<div class="form-group">
    <label>Dates Read</label>
    <input class="form-control" value="@BookData.ReadDates" disabled />
</div>
<div class="form-group">
    <label>Recommend</label>
    <input class="form-control" value="@BookData.Recommend" disabled />
</div>
<div class="form-group">
    <label>Source</label>
    <input class="form-control" value="@BookData.Source" disabled />
</div>
<div class="text-center">
    <NavLink class="btn btn-info" href="@GetEditUrl(Id)">Edit</NavLink>
    <NavLink class="btn btn-secondary" href="books">Back</NavLink>
</div>

@code {

    [Inject]
    public NavigationManager? NavManager { get; set; }

    [Inject]
    public HttpClient? Http { get; set; }

    [Parameter]
    public long Id { get; set; }

    public BookDTO BookData { get; set; } = new BookDTO() { Name = string.Empty };

    protected async override Task OnParametersSetAsync()
    {
        if (Http != null)
        {
            BookData = await Http.GetFromJsonAsync<BookDTO>($"/api/r1/books/{Id}") ?? new() { Name = string.Empty };
        }
    }

    string GetEditUrl(long id) => $"books/edit/{id}";
}
