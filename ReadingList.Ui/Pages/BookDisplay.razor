@if (Book != null)
{
    <div class="book-details">
        <span class="title">@Book.Name</span>
        <div class="coverContainer">
            <NavLink href="@GetDetailsUrl(Book.Id)">
                <img class="coverImage" src="@Book.ImageUrl" alt="cover art" />
            </NavLink>
        </div>
        <div @onclick="@GoToStartDate">
            <div style="margin-top: 1rem;">Read Dates: &nbsp;&nbsp;@Book.ReadDates</div>
            @if (@Book.Author != null)
            {
                <div>Author: &nbsp;&nbsp;@Book.Author</div>
            }
            @if (@Book.Tags != null)
            {
                <div>Tags: &nbsp;&nbsp;@Book.Tags</div>
            }
            @if (@Book.ISBN != null)
            {
                <div>ISBN: &nbsp;&nbsp;@Book.ISBN</div>
            }
            @if (@Book.Sequence != null)
            {
                <div>Sequence: &nbsp;&nbsp;@Book.Sequence</div>
            }
            @if (@Book.Rating > 0)
            {
                <div class="rating">Rating: &nbsp;&nbsp;<Rating IsReadOnly="true" IsCompact="true" StarCount=@Book.Rating /></div>
            }
            @if (@Book.Source != null)
            {
                <div>Source: &nbsp;&nbsp;@Book.Source</div>
            }
            @if (@Book.Recommend)
            {
                <div>Recommend: &nbsp;&nbsp;@Book.Recommend</div>
            }
        </div>
    </div>
}


@code
{
    [Parameter, EditorRequired] public ITimelineItem? Book { get; set; }

    [Inject]
    public NavigationManager? NavManager { get; set; }

    private string GetDetailsUrl(long id) => $"books/page/1/details/{id}";

    private void GoToStartDate()
    {
        if (Book?.ReadDate == default)
        {
            NavManager?.NavigateTo("timeline", true);
        }
        else
        {
            string sDate = Book?.ReadDate.ToString("yyyy-MM-dd") ?? string.Empty;
            NavManager?.NavigateTo($"/timeline/{sDate}", true);
        }
    }
}
