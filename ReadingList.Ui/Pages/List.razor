@page "/"
@page "/list"
@page "/readinglist"

<PageTitle>Reading List</PageTitle>

<div class="row">

    <div class="col-md-5">
        <h5>Add New Entry:</h5>
    </div>


    <div class="col-md-offset-1 col-md-6">

        <h5>Recent List:</h5>

        @if (Books.Count() == 0)
        {
            <div>Loading Data...</div>
        }
        else
        {
            <ul>
                @foreach (BookDTO b in Books)
                {
                    <li>
                        <div style="clear: left;"><span class="title">@b.Name</span></div>
                        <div class="row">
                            <div class="col-md-4">
                                <img class="coverImage" src="@b.ImageUrl" alt="cover art" />
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div style="margin-top: 1em;">Read Dates: &nbsp;&nbsp;@b.ReadDates</div>
                            <div>Author: &nbsp;&nbsp;@b.Author</div>
                            <div>Tags: &nbsp;&nbsp;@b.Tags</div>
                            @if (@b.ISBN != null)
                            {
                                <div>ISBN/ASIN: &nbsp;&nbsp;@b.ISBN</div>
                            }
                            @if (@b.Sequence != null)
                            {
                                <div>Sequence: &nbsp;&nbsp;@b.Sequence</div>
                            }
                            @if (@b.Source != null)
                            {
                                <div>Source: &nbsp;&nbsp;@b.Source</div>
                            }
                            <div>Recommend: &nbsp;&nbsp;@b.Recommend</div>
                        </div>
                    </li>
                }
            </ul>
        }
    </div>

</div>




@code {

    [Inject]
    public HttpClient? Http { get; set; }

    [Inject]
    public NavigationManager? NavManager { get; set; }

    [Parameter]
    public long Id { get; set; }


    public BookDTO[] Books { get; set; } = Array.Empty<BookDTO>();

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }

    private async Task UpdateData()
    {
        if (Http != null)
        {
            Books = await Http.GetFromJsonAsync<BookDTO[]>("/api/r1/readingList") ?? Array.Empty<BookDTO>();
        }
    }
}
